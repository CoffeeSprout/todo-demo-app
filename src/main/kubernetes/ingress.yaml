---
# Ingress configuration for external access
# Defines how external traffic should reach the application
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: todo-demo-app-ingress
  namespace: default
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: ""  # TODO: Which ingress controller are we using? (hint: it's an open source proxy)
    
    # TLS/SSL certificate management
    cert-manager.io/cluster-issuer: ""  # TODO: Which cert-manager issuer should we use? (staging or production?)
    
    # DNS automation with external-dns controller (keep this as-is)
    external-dns.alpha.kubernetes.io/hostname: "todo-PARTICIPANT_NAME.hacknight043.coffeesprout.dev"
    
    # HAProxy configuration for reliability
    haproxy-ingress.github.io/backend-check-interval: ""  # TODO: How often should backend checks run?
    haproxy-ingress.github.io/timeout-server: ""          # TODO: How long before timing out server connections?
    haproxy-ingress.github.io/timeout-connect: ""         # TODO: How long before timing out during connection phase?
    haproxy-ingress.github.io/balance-algorithm: ""       # TODO: Which load balancing algorithm? (roundrobin, leastconn?)
spec:
  # TLS configuration
  tls:
    - hosts:
        - todo-PARTICIPANT_NAME.hacknight043.coffeesprout.dev
      # Secret name where the TLS certificate will be stored
      # This secret is created automatically by cert-manager
      secretName: todo-demo-app-tls
  
  # Routing rules
  rules:
    - host: todo-PARTICIPANT_NAME.hacknight043.coffeesprout.dev  # Domain name for the application
      http:
        paths:
          - path: /              # Root path
            pathType: Prefix     # Match any URI starting with /
            backend:
              service:
                name: todo-demo-app  # Service to route traffic to
                port:
                  number: 80         # Service port to route traffic to
