---
# Horizontal Pod Autoscaler (HPA) Configuration
# Automatically scales the number of pods based on resource utilization
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: todo-demo-app-hpa
  namespace: default
spec:
  # Reference to the target deployment to scale
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: todo-demo-app
  
  # Scaling boundaries - won't scale below min or above max
  minReplicas: 2   # Ensures high availability with minimum 2 pods
  maxReplicas: 5   # Upper limit to prevent runaway scaling
  
  # Metrics used to determine scaling decisions
  metrics:
  # CPU-based scaling - target 70% average utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70  # Scale up when CPU usage exceeds 70%
  
  # Memory-based scaling - target 80% average utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80  # Scale up when memory usage exceeds 80%
  
  # Fine-tuning the scaling behavior to prevent thrashing
  behavior:
    # Scale up configuration - how aggressively to add pods
    scaleUp:
      stabilizationWindowSeconds: 60  # Wait 60s after last scale-up event
      policies:
      - type: Pods
        value: 1                      # Add max 1 pod at a time
        periodSeconds: 60             # Wait 60s between adding pods
    
    # Scale down configuration - how cautiously to remove pods
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes after last scale-down event
      policies:
      - type: Pods
        value: 1                       # Remove max 1 pod at a time
        periodSeconds: 120             # Wait 2 minutes between removing pods